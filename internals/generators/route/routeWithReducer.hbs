 {
      path: '{{ path }}',
      getComponent(nextState, cb) {
        const importModules = Promise.all([
          System.import('containers/{{ properCase component }}/reducer'),
          System.import('containers/{{ properCase component }}'),
        ]);

        const renderRoute = loadModule(cb);

        importModules.then(([reducer, component]) => {
          injectReducer('{{ camelCase component }}', reducer.default);
          renderRoute(component);
        });

        importModules.catch(errorLoading);
      },
      {{#if useSagas}}
      onEnter(nextState, replace, callback) {
        if (this.loadedSagas) {
          callback();
          return;
        }

        const importModules = System.import('containers/{{ properCase component }}/sagas');

        importModules.then((sagas) => {
          this.loadedSagas = injectSagas(sagas.default);
          callback();
        });

        importModules.catch(errorLoading);
      },
      onLeave() {
        if (this.loadedSagas) {
          this.loadedSagas.forEach((saga) => saga.cancel());
          delete this.loadedSagas;
        }
      },
      {{/if}}
    },$1
